/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visualizacion;

import Base.ConectorBD;
import Base.ProductoDAO;
import POJOS.ProductoDTO;
import Util.TextPrompt;
import Util.Utilidad;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yelbetto
 */
public class CatalogoProductos extends javax.swing.JPanel {

    ArrayList<ProductoDTO> listado_todos_productos = new ArrayList<>();
    ConectorBD conector;
    Utilidad utilidad = new Utilidad();

    /**
     * Creates new form CatalogoProductos
     */
    public CatalogoProductos() {
        initComponents();
        conector = new ConectorBD();
        if (conector.conectar()) {
            ProductoDAO pro = new ProductoDAO(conector);
            listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                    + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                    + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(b.nombre) ASC;");
            rellenando(listado_todos_productos);
        }
        TextPrompt tx1 = new TextPrompt("INGRESA CODIGO PRODUCTO",codigo);
        TextPrompt tx2 = new TextPrompt("INGRESA NOMBRE PRODUCTO",nombre);
        TextPrompt tx3 = new TextPrompt("INGRESA FABRICANTE PRODUCTO",fabricante);
        tx1.changeStyle(2);
        tx2.changeStyle(2);
        tx3.changeStyle(2);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fabricante = new javax.swing.JTextField();
        asc_desc = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        segun = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_productos = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CATALOGO DE PRODUCTOS");

        jLabel2.setText("CODIGO:");

        codigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codigoKeyReleased(evt);
            }
        });

        jLabel3.setText("NOMBRE:");

        nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreKeyReleased(evt);
            }
        });

        jLabel4.setText("FABRICANTE:");

        fabricante.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fabricante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fabricanteKeyReleased(evt);
            }
        });

        asc_desc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ASCENDENTE", "DESCENDENTE" }));
        asc_desc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                asc_descItemStateChanged(evt);
            }
        });

        jLabel5.setText("ORDENAR DE MANERA:");

        jLabel6.setText("SEGÃšN:");

        segun.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NOMBRE", "FABRICANTE", "CODIGO", "CANTIDAD", "PRECIO" }));
        segun.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                segunItemStateChanged(evt);
            }
        });

        jt_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CODIGO", "NOMBRE", "FABRICANTE", "PRECIO", "TIENDA", "CANTIDAD", "DESCRIPCION", "GARANTIA"
            }
        ));
        jScrollPane1.setViewportView(jt_productos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombre))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fabricante))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(asc_desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(segun, 0, 199, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(fabricante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(asc_desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(segun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void codigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoKeyReleased
        al_cambiar();
        utilidad.limpiar_tablas(jt_productos);
        rellenando(buscar());
    }//GEN-LAST:event_codigoKeyReleased

    private void nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyReleased
        al_cambiar();
        utilidad.limpiar_tablas(jt_productos);
        rellenando(buscar());
    }//GEN-LAST:event_nombreKeyReleased

    private void fabricanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fabricanteKeyReleased
        al_cambiar();
        utilidad.limpiar_tablas(jt_productos);
        rellenando(buscar());
    }//GEN-LAST:event_fabricanteKeyReleased

    private void asc_descItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_asc_descItemStateChanged
        al_cambiar();
        utilidad.limpiar_tablas(jt_productos);
        rellenando(buscar());
    }//GEN-LAST:event_asc_descItemStateChanged

    private void segunItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_segunItemStateChanged
        al_cambiar();
        utilidad.limpiar_tablas(jt_productos);
        rellenando(buscar());
    }//GEN-LAST:event_segunItemStateChanged

    public void al_cambiar() {
        ProductoDAO pro = new ProductoDAO(conector);
        if (asc_desc.getSelectedItem().toString().equalsIgnoreCase("ASCENDENTE")) {
            String s = segun.getSelectedItem().toString();
            if (s.equalsIgnoreCase("NOMBRE")) {
                listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                        + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                        + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(b.nombre) ASC;");
            } else if (s.equalsIgnoreCase("CODIGO")) {
                listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                        + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                        + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(b.codigo_producto) ASC;");
            } else if (s.equalsIgnoreCase("FABRICANTE")) {
                listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                        + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                        + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(b.fabricante) ASC;");
            } else if (s.equalsIgnoreCase("CANTIDAD")) {
                listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                        + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                        + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(a.cantidad) ASC;");
            } else if (s.equalsIgnoreCase("PRECIO")) {
                listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                        + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                        + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(b.precio) ASC;");
            }
        } else {
            String s = segun.getSelectedItem().toString();
            if (s.equalsIgnoreCase("NOMBRE")) {
                listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                        + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                        + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(b.nombre) DESC;");
            } else if (s.equalsIgnoreCase("CODIGO")) {
                listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                        + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                        + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(b.codigo_producto) DESC;");
            } else if (s.equalsIgnoreCase("FABRICANTE")) {
                listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                        + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                        + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(b.fabricante) DESC;");
            } else if (s.equalsIgnoreCase("CANTIDAD")) {
                listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                        + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                        + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(a.cantidad) DESC;");
            } else if (s.equalsIgnoreCase("PRECIO")) {
                listado_todos_productos = pro.obtener_p("SELECT a.codigo_existencia AS i, a.cantidad AS e,a.codigo_tienda AS t, b.nombre AS n,b.fabricante AS f,"
                        + "b.codigo_producto AS cp,b.precio AS pr,b.garantia AS ga,b.descripcion AS de "
                        + "FROM Existencia AS a, Producto AS b WHERE a.codigo_producto = b.codigo_producto ORDER BY(b.precio) DESC;");
            }
        }
    }

    public void rellenar(ProductoDTO t) {
        Object[] fila = new Object[9];
        DefaultTableModel model = (DefaultTableModel) jt_productos.getModel();
        fila[0] = t.getCodigo_existencia();
        fila[1] = t.getCodigo_producto();
        fila[2] = t.getNombre();
        fila[3] = t.getFabricante();
        fila[4] = t.getPrecio();
        fila[5] = t.getCodigo_tienda();
        fila[6] = t.getCantidad();
        fila[7] = t.getDescripcion();
        fila[8] = t.getGarantia();
        model.addRow(fila);
    }
    public void rellenando(ArrayList<ProductoDTO> p){
        for (int i = 0; i < p.size(); i++){
            rellenar(p.get(i));
        }
    }

    public ArrayList<ProductoDTO> buscar() {
        ArrayList<ProductoDTO> p = new ArrayList<>();
        String c = codigo.getText();
        String n = nombre.getText();
        String f = fabricante.getText();
        for (ProductoDTO pr : listado_todos_productos) {
            if (!c.isEmpty() && !n.isEmpty() && !f.isEmpty()) {
                if (pr.getCodigo_producto().toUpperCase().contains(c.toUpperCase()) && pr.getNombre().toUpperCase().contains(n.toUpperCase()) && pr.getFabricante().toUpperCase().contains(f.toUpperCase())){
                    p.add(pr);
                }
            } else  if (c.isEmpty() && !n.isEmpty() && !f.isEmpty()){
                if (pr.getNombre().toUpperCase().contains(n.toUpperCase()) && pr.getFabricante().toUpperCase().contains(f.toUpperCase())){
                    p.add(pr);
                }
            }else  if (c.isEmpty() && n.isEmpty() && !f.isEmpty()){
                if (pr.getFabricante().toUpperCase().contains(f.toUpperCase())){
                    p.add(pr);
                }
            }else  if (c.isEmpty() && !n.isEmpty() && f.isEmpty()){
                if (pr.getNombre().toUpperCase().contains(n.toUpperCase())){
                    p.add(pr);
                }
            }else if (!c.isEmpty() && !n.isEmpty() && f.isEmpty()) {
                if (pr.getCodigo_producto().toUpperCase().contains(c.toUpperCase()) && pr.getNombre().toUpperCase().contains(n.toUpperCase())) {
                    p.add(pr);
                }
            }else if (!c.isEmpty() && n.isEmpty() && f.isEmpty()) {
                if (pr.getCodigo_producto().toUpperCase().contains(c.toUpperCase())) {
                    p.add(pr);
                }
            }else if (!c.isEmpty() && n.isEmpty() && !f.isEmpty()) {
                if (pr.getCodigo_producto().toUpperCase().contains(c.toUpperCase()) && pr.getFabricante().toUpperCase().contains(n.toUpperCase())) {
                    p.add(pr);
                }
            }else  if (c.isEmpty() && n.isEmpty() && f.isEmpty()){
                p.add(pr);
            }
        }
        return p;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> asc_desc;
    private javax.swing.JTextField codigo;
    private javax.swing.JTextField fabricante;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jt_productos;
    private javax.swing.JTextField nombre;
    private javax.swing.JComboBox<String> segun;
    // End of variables declaration//GEN-END:variables
}
